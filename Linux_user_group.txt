User and Group 
限制使用者或进程能使用那些后禁止使用哪些resource.
Group is used to manage User

1.UserId
2.user belongs to a primary group 并可以属于一个或多个附属组
3.groupId
4.每个进程一个用户身份运行，受到该用户访问权限控制
5.每个可登陆用户拥有一个交互shell

UserId 32位, 用户Id 一般限制在60,000 以下

用户分类：
1. -root 用户 （id 为0的用户为root用户）
2. 系统用户 1-499  系统进程，系统服务使用。没有shell。
3. 普通用户 500以上

每个文件有一个所属用户和所属组
id 显示当前用户信息，uid gid(主组) groups 附属组
passwd 修改用户密码

相关文件
/etc/passwd 用户信息
/etc/shadow 用户密码（加密）
/etc/group 保存组信息

passwd 文件：每行代表用户信息， 七个部分 用户名:x代表密码保存在shadow:uid:gid:用户描述信息:用户home目录:用户登陆shell(一般为/bin/bash,系统 /sbin/nologin)
shadow 文件：每行代表用户信息， 用户名:!!(没有创建过密码)，(或加密后的密码长串$加密方法$加密掩码$加密后密码):...
group  文件: 组名:组密码:gid:组里用户

查看登陆的用户:
whoami 当前登陆
who 显示当前还有那些用户登陆
w 显示还有哪些用户登陆，以及正在做的事情

useradd uname 创建用户
cat etc/passwd 可以看到新建的文件

1./etc/passwd 添加信息
2. 若passwd 创建密码， 跟新/etc/shadow
3. 创建用户home 目录
4. /etc/skel 中的文件复制到用户home文件夹中(.bash_logout command to be executed when logout, .bash_profile user simple info, .bashrc command to be executed when user login )
	希望每个用户都拥有的文件。
5. 创建与用户名相同的组，新建用户默认属于这个组。

useradd -d 家目录
		-s 登陆shell
		-u userid
		-g 主组
		-G 附属组 31个,分割

修改用户信息 usermod ... 原用户名
usermod -l 新用户名 (家目录不会变)
		-u new uid 
		-d new user home folder
		-g new 用户所属主组
		-G 用户所属附属组
		-L 锁定用户不能登陆
		-U 解锁

userdel uname 保留user home folder
userdel -r uname 同时删除home folder

Group 管理user
常见划分为部分

groupadd gname
groupmod -n newname oldname 修改组名
groupmod -g newgid oldgid 修改组id
groupdel gname

group    username
training	u1 u2
market 		u3 u4
manager 	u5 u6 
一般设置附属组


权限机制
os 限制对资源访问的控制
type:rwx读，写，执行
机制: resource 拥有特定权限(rights)，所属用户(users)，所属组(groups)。
	  以此限制哪些用户(users)，哪些组(goups)可以对特停文件进行什么样的操作(rights).
	  进程的权限，以用户权限访问。
	 
文件 rwx 读取文件内容，修改文件内容，可以作为可执行命令
文件夹 rwx 可列出目录内容，可在目录中创建或删除文件，可以访问目录内容(浏览权限必须同时具有rx权限)

linux权限基于UGO模型控制
1.user group other
2.每个文件基于UGO进行设置
3.权限三个一组(rwx)，对UGO分别进行设置
4.每个文件又有一个所属用户和所属组(UG)，其他用户和组访问该文件使用O权限
 
ls -l xxx
drwxr-xr-- 2 nash_su training 208 oct 1 13:50 linuxcast.net
d:directory(-普通文件，d文件夹，l链接)
rwxr-xr--;UGO permission
2:link num
nash_su:所属用户
training: 所属组
208:大小
oct 1 13:50: time
linuxcast.net: 文件名or目录名

修改文件所属用户
chown Username dnameorfname
-R 递归修改目录下所有文件的所属用户
chgrp gname dnameorfname
-R 递归修改目录下所有文件的所属组

chmod 模式 文件
u,g,o
a : ugo
+- 增删
rwx

chmod u+rw xxx
chmod g-x xxx
chmod go+r xxx
chmod a-x xxx
-R 递归

数字方式修改
-r=4
-w=2
-x=1
rw=6
rwx=7
r-x=5

chmod 660 xxx : rw-rw----

group    username
training	u1 u2
market 		u3 u4
manager 	u5 u6 

groupadd training
groupadd market
groupadd manager
useradd -G training u1
useradd -G training u2
useradd -G market u3
useradd -G market u4 
useradd -G manager u5
useradd -G manager u6

所有文件夹在统一的目录下,每个部门有独立文件夹，不同部门不能互相访问,每个员工在所在部门下拥有有一个所属文件夹，同部门不同员工之间可以互相查看，但不能互相修改。
cd /								定位根目录
mkdir company						创建公司总目录
cd company							定位公司目录
mkdir training						创建三个部门目录
mkdir market
mkdir manager
chgrp training training/			修改每个部门文件夹所属组属于各自部门组
chgrp market market/
chgrp manager manager/
chmod 750 manager/					移除O的所有权限，使得不同部门间不能访问
chmod 750 market/
chmod 750 training/
cd training/
mkdir u1
mkdir u2
chown u1 u1\						所属用户修改为自己
chown u2 u2\
chgrp training u1\					所属组修改为部门
chgrp training u2\
chmod 750 u1\						自己有所有权限，所属组不能修改，其他无权读取
chmod 750 u2\
.......


默认权限：
			所属用户， 所属组  other
默认文件	rw- 	rw-      r--
默认文件夹  rwx 		rwx 	 r-x
		
终端的umask 属性 数字表示
umask使用
目录默认 777-umask
文件默认 666-umask 

普通：002 root 022

命令：umask
umask 显示umask值
umask 022 设置umask值

特殊权限:
umask 
0002
第一位是特殊权限: suid sgid sticky
suid 文件 文件拥有suid权限， 以文件所属用户身份执行，而非执行文件的用户的权限。所属用户rwx=>rws   passwd 所属用户是root rws权限, shadow 无任何权限， 执行passwd,以root 用户身份去写入shadow
	 目录无影响
sgid 文件 以文件所属组的身份执行	
	 目录 目录拥有sgid 在该目录下创建的新文件继承目录所属组  所属组 x=>s
sticky 目录有sticky, 则对该目录有写权限的用户只能删除拥有的文件，无法删除其他用户的文件  other x=t

原本有 x 则 x=>s x=>t
否则 S, T

chmod u+s name
chmod g+s name
chmod o+t name 

数字设置
suid =4
sgid =2
sticky=1

chmod 4755 name




